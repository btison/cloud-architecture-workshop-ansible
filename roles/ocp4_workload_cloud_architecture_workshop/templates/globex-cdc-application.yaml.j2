{% for __user in r_cloud_architecture_workshop_users %}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ ocp4_workload_cloud_architecture_workshop_module_cdc_argo_application_name }}-{{ __user }}
  namespace: {{ ocp4_workload_cloud_architecture_workshop_module_cdc_argo_application_namespace }}
  finalizers:
  - resources-finalizer.argocd.argoproj.io/foreground
spec:
  ignoreDifferences:
  - group: kafka.strimzi.io
    kind: KafkaConnect
    jsonPointers:
    - /spec/bootstrapServers
    - /spec/authentication
    - /spec/tls
    - /spec/replicas

  destination:
    name: ""
    namespace: {{ r_cloud_architecture_workshop_module_cdc_namespace | replace("user",__user) }}
    server: 'https://kubernetes.default.svc'
  project: default
  syncPolicy:
    automated:
      prune: false
      selfHeal: false
  source:
    repoURL: {{ ocp4_workload_cloud_architecture_workshop_module_cdc_application_repo }}
    targetRevision: {{ ocp4_workload_cloud_architecture_workshop_module_cdc_application_repo_tag }}
    path: {{ ocp4_workload_cloud_architecture_workshop_module_cdc_application_repo_path }}
    helm:
      values: |

        debezium:
          deploy: true
          connectors:
            globex:
              kafkaConnect: kafka-connect
              database:
                hostname: globex-db.globex-{{ __user }}.svc.cluster.local
                port: 5432
                user: debezium
                password: debezium
                dbname: globex
                topicPrefix: globex
              schema:
                includeList: public
              table:
                includeList: public.customer,public.orders,public.line_item
              topic:
                replicationFactor: 2
                partitions: 1
              decimalHandlingMode: string
        cashbackConnector:
          deploy: true
        integrationPlatform:
          deploy: true

        kafka:
          namespace: globex-mw-{{ __user }}

        cashback-db:
          persistence:
            mode: ephemeral
{% endfor %}