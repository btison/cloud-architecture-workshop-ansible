---
kind: Secret
apiVersion: v1
metadata:
  name: {{ ocp4_workload_cloud_architecture_workshop_keycloak_pgsql }}
stringData:
  database-name: keycloak
  database-password: keycloak
  database-user: keycloak
type: Opaque
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ ocp4_workload_cloud_architecture_workshop_keycloak_pgsql }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ ocp4_workload_cloud_architecture_workshop_keycloak_pgsql_storage }}
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ ocp4_workload_cloud_architecture_workshop_keycloak_pgsql }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/name: {{ ocp4_workload_cloud_architecture_workshop_keycloak_pgsql }}
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: keycloak
        app.kubernetes.io/name: {{ ocp4_workload_cloud_architecture_workshop_keycloak_pgsql }}
    spec:
      restartPolicy: Always
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - '-i'
                - '-c'
                - >-
                  psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d
                  $POSTGRESQL_DATABASE -c 'SELECT 1'
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          name: {{ ocp4_workload_cloud_architecture_workshop_keycloak_pgsql }}
          livenessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: {{ ocp4_workload_cloud_architecture_workshop_keycloak_pgsql }}
                  key: database-user
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ ocp4_workload_cloud_architecture_workshop_keycloak_pgsql }}
                  key: database-password
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ ocp4_workload_cloud_architecture_workshop_keycloak_pgsql }}
                  key: database-name
          securityContext:
            capabilities:
              drop:
                - ALL
            allowPrivilegeEscalation: false
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: {{ ocp4_workload_cloud_architecture_workshop_keycloak_pgsql }}-data
              mountPath: /var/lib/pgsql/data
          terminationMessagePolicy: File
          image: 'registry.redhat.io/rhel8/postgresql-12'
      volumes:
        - name: {{ ocp4_workload_cloud_architecture_workshop_keycloak_pgsql }}-data
          persistentVolumeClaim:
            claimName: {{ ocp4_workload_cloud_architecture_workshop_keycloak_pgsql }}
---
kind: Service
apiVersion: v1
metadata:
  name: {{ ocp4_workload_cloud_architecture_workshop_keycloak_pgsql }}
spec:
  ports:
    - name: postgresql
      protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP
  selector:
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/name: {{ ocp4_workload_cloud_architecture_workshop_keycloak_pgsql }}
