- name: Generate cluster admin password
  when: ocp4_workload_authentication_htpasswd_admin_password | default('') | length == 0
  ansible.builtin.set_fact:
    _ocp4_workload_authentication_admin_password: >-
      {{ lookup('password', '/dev/null chars=ascii_letters,digits '
          ~ 'length=' ~ ocp4_workload_authentication_htpasswd_admin_password_length
      ) }}

- name: Use provided admin password
  when: ocp4_workload_authentication_htpasswd_admin_password | default('') | length > 0
  ansible.builtin.set_fact:
    _ocp4_workload_authentication_admin_password: >-
      {{ ocp4_workload_authentication_htpasswd_admin_password }}

- name: Set up randomized user password array
  when: ocp4_workload_authentication_htpasswd_user_password_randomized | bool
  ansible.builtin.set_fact:
    _ocp4_workload_authentication_htpasswd_user_passwords: >-
      {{ _ocp4_workload_authentication_htpasswd_user_passwords + [ lookup('password',
        '/dev/null chars=ascii_letters,digits '
        ~ 'length=' ~ ocp4_workload_authentication_htpasswd_user_password_length ) ] }}
  loop: "{{ range(0, ocp4_workload_authentication_htpasswd_user_count | int, 1) | list }}"

- name: Set up common user password array
  when: not ocp4_workload_authentication_htpasswd_user_password_randomized | bool
  block:
    - name: Generate common user password
      when: ocp4_workload_authentication_htpasswd_user_password | default('') | length == 0
      ansible.builtin.set_fact:
        _ocp4_workload_authentication_htpasswd_user_password: >-
          {{ lookup('password', '/dev/null chars=ascii_letters,digits '
              ~ 'length=' ~ ocp4_workload_authentication_htpasswd_user_password_length
          ) }}

    - name: Use provided user password
      when: ocp4_workload_authentication_htpasswd_user_password | default('') | length > 0
      ansible.builtin.set_fact:
        _ocp4_workload_authentication_htpasswd_user_password: >-
          {{ ocp4_workload_authentication_htpasswd_user_password }}

    - name: Generate user passwords array for common password
      ansible.builtin.set_fact:
        _ocp4_workload_authentication_htpasswd_user_passwords: >-
          {{ _ocp4_workload_authentication_htpasswd_user_passwords + [_ocp4_workload_authentication_htpasswd_user_password] }}
      loop: "{{ range(0, ocp4_workload_authentication_htpasswd_user_count | int, 1) | list }}"

- name: Create temporary htpasswd file
  ansible.builtin.tempfile:
    state: file
    suffix: htpasswd
  register: r_htpasswd

- name: Add admin user to htpasswd file
  community.general.htpasswd:
    path: "{{ r_htpasswd.path }}"
    name: "{{ ocp4_workload_authentication_admin_user }}"
    password: "{{ _ocp4_workload_authentication_admin_password }}"
    mode: 0640

- name: Add users and passwords to htpasswd file
  community.general.htpasswd:
    path: "{{ r_htpasswd.path }}"
    name: >-
      {%- if ocp4_workload_authentication_htpasswd_user_count | int == 1 -%}
      {{ ocp4_workload_authentication_htpasswd_user_name }}
      {%- else -%}
      {{ ocp4_workload_authentication_htpasswd_user_base }}{{ item + 1 }}
      {%- endif -%}
    password: "{{ _ocp4_workload_authentication_htpasswd_user_passwords[ item ] }}"
    mode: 0640
  loop: "{{ range(0, ocp4_workload_authentication_htpasswd_user_count | int, 1) | list }}"

- name: Read contents of htpasswd file
  ansible.builtin.slurp:
    src: "{{ r_htpasswd.path }}"
  register: r_htpasswd_file

- name: Remove generated htpasswd file
  ansible.builtin.file:
    path: "{{ r_htpasswd.path }}"
    state: absent

- name: Ensure htpasswd Secret is absent
  kubernetes.core.k8s:
    state: absent
    api_version: v1
    kind: Secret
    name: htpasswd
    namespace: openshift-config
  register: r_htpasswd_secret_absent
  retries: 5
  delay: 10
  until: r_htpasswd_secret_absent is success

- name: Create htpasswd Secret
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'secret-htpasswd.yaml.j2') | from_yaml }}"

- name: Update OAuth configuration
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('file', 'oauth-htpasswd.yaml') | from_yaml }}"

- name: Set up cluster admin users
  when: ocp4_workload_authentication_idm_type != "none"
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'cluster_role_binding.yaml.j2') | from_yaml }}"
